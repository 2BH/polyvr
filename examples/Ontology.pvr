<?xml version="1.0" encoding="UTF-8"?>
<Scene name_suffix="0" base_name="Ontology" name_space="Scene">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="2" persistency="666" pickable="0" type="Object" unique="1" visible="1">
      <Object ambient="0.3 0.3 0.3 1" base_name="light" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowType="4096" specular="0.1 0.1 0.1 1" type="Light" unique="1" visible="1">
        <Object accept_root="1" aspect="1" at="0 0 2" at_dir="1" base_name="Default" far="512" fov="1.0472" from="0 0 4.14496" name_space="__global__" name_suffix="0" near="0.1" persistency="666" pickable="0" scale="1 1 1" type="Camera" unique="1" up="0 1 0" visible="1">
          <Object at="0 0 -1" at_dir="1" base_name="Headlight_beacon" from="0 0 0" light="light" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" unique="1" up="0 1 0" visible="1">
            <Node active="1" cR="0 1 0" cR_local="0" cR_mode="0" cT="0 1 0" cT_local="0" cT_mode="0" persistency="666"/>
          </Object>
          <Node active="1" cR="0 1 0" cR_local="0" cR_mode="0" cT="0 1 0" cT_local="0" cT_mode="0" persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Rendering deferred_rendering="0" frustum_culling="1" hmdd="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="classify" name_space="__script__" name_suffix="0" persistency="666" unique="1" type="Python" mobile="">
      <core>
	import VR
	
	for o in scene.getChildren(True):
		n = o.getName()
		if ':' in n:
			[concept, name] = n.split(':')
			print concept, name
			e = onto.addEntity(name, concept)
			o.setEntity(e)
			
			e.setVector('orientation', [1,0,0,0], 'Orientation')
			e.setVector('position', o.getFrom(), 'Position')
			
			
	print onto.toString()
</core>
      <arg type="NoneType" value="None" name_suffix="0" base_name="onto" name_space="classify"/>
      <arg type="NoneType" value="None" name_suffix="0" base_name="scene" name_space="classify"/>
    </Script>
    <Script base_name="init" name_space="__script__" name_suffix="0" persistency="666" unique="1" type="Python" mobile="">
      <core>
	import VR
	
	# build simple knowledge base
	VR.knowledge = VR.Ontology() # create a new ontology for the furniture domain
	VR.knowledge.addModule('Object') # add the Object module, will automatically add modules like transform, geometry and math
	
	VR.knowledge.addConcept('Furniture', 'Object', {'':''})
	VR.knowledge.addConcept('Chair', 'Furniture')
	VR.knowledge.addConcept('Table', 'Furniture')
	
	#print VR.knowledge.toString()
	
	# build simple scene
	if hasattr(VR, 'scene'): VR.scene.destroy()
	VR.scene = VR.Object('scene')
	VR.getRoot().find('light').addChild(VR.scene)
	
	table = VR.Geometry('Table:t1')
	chair = VR.Geometry('Chair:c1')
	table.setPrimitive('Box 1 1 1 1 1 1')
	chair.setPrimitive('Box 0.5 0.5 0.5 1 1 1')
	table.translate(0,0.5,0)
	chair.translate(-1,0.25,0)
	VR.scene.addChild(table)
	VR.scene.addChild(chair)
	
	# classify scene objects as semantic entities
	#  currently the data used for the classification 
	#  is only the object name when matching the convention:
	#  'Concept:name' as seen above.
	#VR.scene.classify(VR.knowledge, True)
	VR.classify(VR.knowledge, VR.scene)
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" name_suffix="0" base_name="trigger" name_space="__global__"/>
      <trig type="on_device" dev="keyboard" state="Pressed" param="" key="105" name_suffix="1" base_name="trigger" name_space="__global__"/>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666">
    <Ontology base_name="new_concept_1" flag="custom" name_space="Ontology" name_suffix="0" persistency="666" unique="1">
      <Thing base_name="Thing" name_space="concept" name_suffix="0" persistency="666" unique="0">
        <Children>
          <Concept base_name="Thing_derived" name_space="concept" name_suffix="0" persistency="666" unique="0" ID="235"/>
        </Children>
      </Thing>
    </Ontology>
    <Ontology base_name="new_concept_2" flag="custom" name_space="Ontology" name_suffix="0" persistency="666" unique="1">
      <Thing base_name="Thing" name_space="concept" name_suffix="0" persistency="666" unique="0"/>
    </Ontology>
  </Semantics>
</Scene>
