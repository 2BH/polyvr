<?xml version="1.0" encoding="UTF-8"?>
<Scene name_suffix="0" base_name="mecha_test" name_space="Scene">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="1">
      <Object ambient="0.3 0.3 0.3 1" base_name="Headlight" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowType="4096" specular="0.1 0.1 0.1 1" type="Light" visible="1">
        <Object accept_root="1" aspect="1" at="0.156023 0.185698 -0.109949" at_dir="0" base_name="Default" far="250" fov="1.0472" from="-0.451005 0.433119 -0.790419" name_space="__global__" name_suffix="0" near="0.1" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="1">
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="Headlight" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="1">
            <Node active="1" cR="0 1 0" cR_local="0" cR_mode="0" cT="0 1 0" cT_local="0" cT_mode="0" persistency="666"/>
          </Object>
          <Node active="1" cR="0 1 0" cR_local="0" cR_mode="0" cT="0 1 0" cT_local="0" cT_mode="0" persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Rendering deferred_rendering="0" frustum_culling="1" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script name_suffix="0" base_name="click" name_space="__script__" type="Python" mobile="">
      <core>
	import VR
	import math
	
	if dev.intersect():
		i = dev.getIntersected()
		if i == VR.P1:
			VR.rotate = not VR.rotate # toggle state
			
		if i == VR.P4:
			VR.block = not VR.block # toggle state
			pb = [VR.cgr,VR.cgr*math.sqrt(3), 0]
			pub = [VR.cgr,VR.cgr*math.sqrt(3), -0.1]	
			if VR.block: VR.P4.setFrom(pb)
			else: VR.P4.setFrom(pub)
		
	
</core>
      <trig type="on_device" dev="mouse" state="Pressed" param="" key="0" name_suffix="2" base_name="trigger" name_space="__global__"/>
    </Script>
    <Script name_suffix="0" base_name="init" name_space="__script__" type="Python" mobile="">
      <core>
	import VR
	import math
	import string
	
	VR.rotate = 1
	VR.block = 0
	
	# root node and reset
	if hasattr(VR, 'gears'):
		VR.gears.destroy()
	VR.gears = VR.Transform('gears')
	root.addChild(VR.gears)
	
	if hasattr(VR, 'mechanism'):
		VR.mechanism.clear()
	else:
		VR.mechanism = VR.Mechanism()
	
	# primitives
	def addPrimitive(params, mecha):
		p = VR.Geometry(params[0])
		s = string.join([str(i) for i in params])
		p.setPrimitive( s )
		p.setPickable(True)
		p.getConstraint().setRotationConstraint([0,0,1], 'LINE', 1)
		VR.gears.addChild(p)
		if mecha:
			VR.mechanism.add(p)
		return p
		
	# parameters
	cfr = 1 # cyberfloor radius
	gp = 0.02 # gear pitch
	bgp = 0.01 # bevel gear pitch
	agN = 12 # auxilliary gear teeth N 
	cgN = 32 # chain gear teeth N 
	ar = 0.01 # axle radius
	
	cgr = gp*cgN*0.5/math.pi # chain gear radius
	VR.cgr = cgr
		
	# pads
	VR.P1 = addPrimitive(['Gear', 0.02, ar, gp, cgN, 0.01, 0], True)
	VR.P2 = addPrimitive(['Gear', 0.02, ar, gp, cgN, 0.01, 0], True)
	VR.P3 = addPrimitive(['Gear', 0.02, ar, gp, cgN, 0.01, 0], True)
	VR.P4 = addPrimitive(['Gear', 0.02, ar, gp, cgN, 0.01, 0], True)
	VR.P5 = addPrimitive(['Gear', 0.02, ar, gp, cgN, 0.01, 0], True)
	VR.P6 = addPrimitive(['Gear', 0.02, ar, gp, cgN, 0.01, 0], True)
	VR.P7 = addPrimitive(['Gear', 0.02, ar, gp, 16, 0.01, 0], True)
	VR.P8 = addPrimitive(['Gear', 0.02, ar, gp, cgN, 0.01, 0], True)
	VR.P2.translate(cgr*2,0,0)
	VR.P3.translate(cgr*4,0,0)
	VR.P4.translate(cgr,cgr*math.sqrt(3), -0.1) # block wheel
	VR.P5.translate(cgr*2,-cgr*2,0)
	VR.P6.translate(cgr*4,-cgr*2,0)
	VR.P7.translate(cgr*8,0,0)
	VR.P8.translate(cgr*8,cgr*3,0)
	
	c = VR.mechanism.addChain(0.02, [VR.P3, VR.P7, VR.P8], 'lll')
	VR.gears.addChild(c)
	
	m = VR.Material('blue')
	m.setDiffuse(0.5,0.7,1.0)
	VR.P1.setMaterial(m)
	
	m = VR.Material('red')
	m.setDiffuse(1.0,0.5,0.5)
	VR.P4.setMaterial(m)
	
	VR.P1.setPickable(0)
	VR.P4.setPickable(0)
	
	
	# lever example
	VR.PL1 = addPrimitive(['Gear', 0.02, ar, gp, cgN, 0.01, 0], True)
	VR.PL2 = addPrimitive(['Gear', 0.02, ar, gp, int(0.2*cgN), 0.01, 0], True)
	VR.PL1.setFrom(0,0.5,0)
	VR.PL2.setFrom(cgr*2,0.5,0)
	
	c = VR.mechanism.addChain(0.02, [VR.PL1, VR.PL2], 'll')
	VR.gears.addChild(c)
	
	VR.PL2.setPickable(0)
	VR.PL1.getConstraint().setRotationConstraint([0,0,1], 'LINE', 0)
	VR.PL1.getConstraint().setTranslationConstraint([0,0.5,0], 'POINT', 0)
	
	m = VR.Material('green')
	m.setDiffuse(0.6,1,0.6)
	VR.PL1.setMaterial(m)
	
	
	
	
	
</core>
      <arg type="VRPyObjectType" value="Headlight" name_suffix="0" base_name="root" name_space="init"/>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" name_suffix="0" base_name="trigger" name_space="__global__"/>
    </Script>
    <Script name_suffix="0" base_name="update" name_space="__script__" type="Python" mobile="">
      <core>
	import VR
	
	if hasattr(VR, 'P1') and VR.rotate:
		VR.P1.rotate(0,0,1, 0.01)
		
	VR.mechanism.update()
</core>
      <trig type="on_timeout" dev="" state="Pressed" param="0" key="0" name_suffix="1" base_name="trigger" name_space="__global__"/>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
</Scene>
