<?xml version="1.0" encoding="UTF-8"?>
<Scene name_suffix="0" base_name="Bricks" name_space="Scene">
  <Objects>
    <Object name_suffix="0" base_name="Root" name_space="__global__" type="Object" pickable="0" visible="1">
      <Object name_suffix="0" base_name="Headlight" name_space="__global__" type="Light" pickable="0" visible="1" ambient="0.3 0.3 0.3 1" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" on="1" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowType="4096" specular="0.1 0.1 0.1 1">
        <Object name_suffix="0" base_name="Default" name_space="__global__" type="Camera" pickable="0" visible="1" from="-2.892 -1.9721 3.02897" at="-1.18501 2.45019 1.75543" up="0 1 0" scale="1 1 1" cT="0 1 0" cR="0 0 0" do_cT="0" do_cR="0" cT_mode="1" at_dir="0" accept_root="1" near="0.1" far="250" aspect="1" fov="1.0472">
          <Object name_suffix="0" base_name="Headlight_beacon" name_space="__global__" type="LightBeacon" pickable="0" visible="1" from="0 0 0" at="0 0 -1" up="0 1 0" scale="1 1 1" cT="0 1 0" cR="0 0 0" do_cT="0" do_cR="0" cT_mode="1" at_dir="1" light="Headlight"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Rendering frustum_culling="1" occlusion_culling="0" two_sided="1"/>
  <Scripts>
    <Script name_suffix="0" base_name="gui" name_space="__script__" type="HTML" mobile="mobile">
      <core>
&lt;!DOCTYPE html&gt;
&lt;html&gt;

&lt;head&gt;
 &lt;style type="text/css"&gt;
  body {text-align:center;
		background:#f0f0ff;
		color:#111166}
 &lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;
		 &lt;script&gt;
			function get(b,s,m) {
				var xmlHttp = new XMLHttpRequest();
				var uri = document.URL+'?button='+b+'&amp;state='+s;
				xmlHttp.open( "GET", uri, true );
				xmlHttp.send( null );
			}
		 &lt;/script&gt;
 
 		&lt;script src="three.min.js"&gt;&lt;/script&gt;
		&lt;script src="TrackballControls.js"&gt;&lt;/script&gt;

		&lt;script&gt;
			var camera, scene, renderer, mesh, geo;
			var width = 180;
			var height = 180;
			var bX = 1;
			var bY = 1;
			var bZ = 1;

			function onWindowResize() {
				camera.aspect = width/height;
				camera.updateProjectionMatrix();
				renderer.setSize( width, height );
			}

			function animate() {
				requestAnimationFrame( animate );
				controls.update();
			}
			
			function render() {
				renderer.render( scene, camera );
			}

			init();
			animate();
			render();

			function init() {
				renderer = new THREE.WebGLRenderer();
				renderer.setPixelRatio( window.devicePixelRatio );
				renderer.setSize( width, height );
				renderer.setClearColor( 0xf0f0ff, 1);
				document.body.appendChild( renderer.domElement );

				camera = new THREE.PerspectiveCamera( 70, width/height, 1, 1000 );
				camera.position.z = 6;

				var texture = THREE.ImageUtils.loadTexture( 'CaveKeeper.png' );
				texture.anisotropy = renderer.getMaxAnisotropy();
				var material = new THREE.MeshBasicMaterial( { map: texture } );

				scene = new THREE.Scene();
				geo = new THREE.BoxGeometry( bX, bY*1.2/3, bZ );
				mesh = new THREE.Mesh( geo, material );
				scene.add( mesh );
				
				controls = new THREE.TrackballControls( camera, renderer.domElement );
				controls.target.set( 0, 0, 0 )
				controls.rotateSpeed = 5.0;
				controls.zoomSpeed = 1.2;
				controls.panSpeed = 0.8;
				controls.noZoom = true;
				controls.noPan = true;
				controls.staticMoving = true;
				controls.dynamicDampingFactor = 0.3;
				controls.addEventListener( 'change', render );

				window.addEventListener( 'resize', onWindowResize, false );
			}
			
			function brick(i,v) {
				if (i == 1) bX = v;
				if (i == 2) bY = v;
				if (i == 3) bZ = v;
				mesh.geometry = new THREE.BoxGeometry( bX, bY*1.2/3, bZ );
				render();
			}
		&lt;/script&gt;
 
&lt;h1&gt;Bricks&lt;/h1&gt;

&lt;input type="number" onchange="brick(1,this.value)" min="1" max="4" value="1"&gt;
&lt;input type="number" onchange="brick(2,this.value)" min="1" max="3" value="1"&gt;
&lt;input type="number" onchange="brick(3,this.value)" min="1" max="4" value="1"&gt;

&lt;br/&gt;&lt;br/&gt;
&lt;button onmousedown='get(1,1)' onmouseup='get(1,0)'&gt;Create&lt;/button&gt;


&lt;/body&gt;&lt;/html&gt;
</core>
    </Script>
    <Script name_suffix="0" base_name="init" name_space="__script__" type="Python" mobile="">
      <core>
	import VR
	
	gui = VR.Geometry('gui')
	gui.setPrimitive('Plane 0.5 2 1 1')
	gui.setPose([-1,0,-2], [0,0,1], [0,-1,0])
	l = VR.getRoot().find('Default')
	l.addChild(gui)
	
	m = VR.Material('gui')
	m.setLit(False)
	gui.setMaterial(m)
	site = VR.CEF()
	site.setMaterial( gui.getMaterial() )
		
	site.setAspectRatio(0.25)
	site.setResolution(200)
	site.open('http://localhost:5500/gui')
	#site.open('http://threejs.org/examples/#webgl_geometry_cube')
	site.addMouse(mouse, gui, 0, 2, 3, 4)
	site.addKeyboard(keyboard)
	
	if not hasattr(VR, 'snap'):
		VR.snap = VR.SnappingEngine()
</core>
      <arg type="VRPyDeviceType" value="keyboard" name_suffix="0" base_name="keyboard" name_space="init"/>
      <arg type="VRPyDeviceType" value="mouse" name_suffix="0" base_name="mouse" name_space="init"/>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" name_suffix="0" base_name="trigger" name_space="__global__"/>
    </Script>
  </Scripts>
  <Sockets/>
  <Background color="0.6 0.6 0.6" path="" type="0"/>
  <Navigation active="Orbit"/>
  <Materials/>
</Scene>
