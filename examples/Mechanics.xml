<?xml version="1.0" encoding="UTF-8"?>
<Scene name_suffix="0" base_name="Mechanics" name_space="Scene">
  <Objects>
    <Object name_suffix="0" base_name="Root" name_space="__global__" type="Object" pickable="0" visible="1">
      <Object name_suffix="0" base_name="Headlight" name_space="__global__" type="Light" pickable="0" visible="1" ambient="0.3 0.3 0.3 1" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" on="1" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowType="4096" specular="0.1 0.1 0.1 1">
        <Object name_suffix="0" base_name="Default" name_space="__global__" type="Camera" pickable="0" visible="1" from="2.01567 1.01068 3.33725" at="-0.83076 -0.145735 0.3" up="0 1 0" scale="1 1 1" cT="0 1 0" cR="0 0 0" do_cT="0" do_cR="0" cT_mode="1" at_dir="0" accept_root="1" near="0.1" far="250" aspect="1" fov="1.0472">
          <Object name_suffix="0" base_name="Headlight_beacon" name_space="__global__" type="LightBeacon" pickable="0" visible="1" from="0 0 0" at="0 0 -1" up="0 1 0" scale="1 1 1" cT="0 1 0" cR="0 0 0" do_cT="0" do_cR="0" cT_mode="1" at_dir="1" light="Headlight"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Rendering deferred_rendering="1" frustum_culling="1" occlusion_culling="0" ssao="1" ssao_kernel="4" ssao_radius="0.105" two_sided="1"/>
  <Scripts>
    <Script name_suffix="0" base_name="init" name_space="__script__" type="Python" mobile="">
      <core>
	import VR
	import math
	Pi = math.pi
	
	if hasattr(VR, 'mechanism'):
		VR.mechanism.destroy()
		
	VR.mechanism = VR.Transform('mechanism')
	VR.mechanism.setScale(10,10,10)
	root.addChild(VR.mechanism)
	
	VR.gears = [] # for animation
	
	def addGear(params):
		g = VR.Geometry('gear')
		g.setPrimitive(' '.join([str(i) for i in params]))
		VR.mechanism.addChild(g)
		return g
		
	# parameters
	gP = 0.02 # gear pitch
	gN = 32 # gear teeth number 
	gR = gP*gN*0.5/Pi # gear radius
	gT = 0.02 # gear thickness
	gL = 0.01 # gear teeth length
	aR = 0.01 # axle radius
		
	g1 = addGear(['Gear', gT, aR, gP, int(1.5*gN), gL, 0])
	g2 = addGear(['Gear', gT, aR, gP, int(0.5*gN), gL, 0])
	g3 = addGear(['Gear', gT, aR, gP, int(0.5*gN), gL, -0.7])
	g4 = addGear(['Gear', gT, aR, gP, int(1.0*gN), gL, -0.7])
	
	g1.translate(-gR, 0, 0)
	g2.translate(gR, 0, 0)
	g3.translate(-gR, 0, gT)
	g4.translate(-gR, -0.5*gR, gR+gT)
	g4.rotate(1,0,0, -Pi*0.5)
	
	VR.gears.append([g1, 1, 1.5*gR])
	VR.gears.append([g2, -1, 0.5*gR])
	VR.gears.append([g3, 1, 1.5*gR])
	VR.gears.append([g4, -1, 3.0*gR])
</core>
      <arg type="VRPyObjectType" value="Headlight" name_suffix="0" base_name="root" name_space="init"/>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" name_suffix="0" base_name="trigger" name_space="__global__"/>
    </Script>
    <Script name_suffix="0" base_name="rotate" name_space="__script__" type="Python" mobile="">
      <core>
	import VR
	
	if not hasattr(VR, 'gears'):
		return
	
	for g in VR.gears:
		dr = 0.002/g[2]
		d = g[0].getDir()
		g[0].rotate(d[0], d[1], d[2], g[1]*dr)
</core>
      <trig type="on_timeout" dev="" state="Pressed" param="50" key="0" name_suffix="1" base_name="trigger" name_space="__global__"/>
    </Script>
  </Scripts>
  <Sockets/>
  <Background color="0.6 0.6 0.6" format=".png" path="" type="0"/>
  <Navigation active="Orbit"/>
  <Materials/>
</Scene>
